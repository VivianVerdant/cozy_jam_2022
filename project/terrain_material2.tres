[gd_resource type="ShaderMaterial" load_steps=21 format=2]

[ext_resource path="res://textures/Grass_01_Nrm_1_fix.png" type="Texture" id=1]
[ext_resource path="res://textures/Grass_01_spec.png" type="Texture" id=2]
[ext_resource path="res://textures/Dirt_01.png" type="Texture" id=3]
[ext_resource path="res://textures/Grass_01_1_bakedAO.png" type="Texture" id=4]
[ext_resource path="res://textures/Dirt_01_Nrm.png" type="Texture" id=5]

[sub_resource type="VisualShaderNodeScalarConstant" id=6]
constant = 3.0

[sub_resource type="VisualShaderNodeInput" id=11]
input_name = "color"

[sub_resource type="VisualShaderNodeTexture" id=12]
texture = ExtResource( 3 )

[sub_resource type="VisualShaderNodeTexture" id=13]
texture = ExtResource( 5 )
texture_type = 2

[sub_resource type="VisualShaderNodeVectorInterp" id=14]

[sub_resource type="VisualShaderNodeVectorInterp" id=15]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeVectorInterp" id=16]

[sub_resource type="VisualShaderNodeScalarConstant" id=18]
constant = 1.0

[sub_resource type="VisualShaderNodeTexture" id=1]
texture = ExtResource( 4 )

[sub_resource type="VisualShaderNodeScalarConstant" id=19]
constant = 0.2

[sub_resource type="VisualShaderNodeVec3Constant" id=5]
constant = Vector3( 0, 1, 0 )

[sub_resource type="VisualShaderNodeTexture" id=7]
texture = ExtResource( 1 )
texture_type = 2

[sub_resource type="VisualShaderNodeTexture" id=9]
texture = ExtResource( 2 )

[sub_resource type="VisualShaderNodeVectorOp" id=10]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 1, 1 ) ]
operator = 3

[sub_resource type="VisualShader" id=3]
code = "shader_type spatial;
render_mode diffuse_lambert_wrap, specular_blinn;

uniform sampler2D tex_frg_13;
uniform sampler2D tex_frg_2;



void vertex() {
// Output:0

}

void fragment() {
// Texture:13
	vec4 tex_frg_13_read = texture(tex_frg_13, UV.xy);
	vec3 n_out13p0 = tex_frg_13_read.rgb;
	float n_out13p1 = tex_frg_13_read.a;

// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, UV.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// Input:11
	vec3 n_out11p0 = COLOR.rgb;

// VectorMix:15
	vec3 n_out15p0 = mix(n_out13p0, n_out2p0, n_out11p0);

// Scalar:19
	float n_out19p0 = 1.000000;

// Output:0
	ALBEDO = n_out15p0;
	ROUGHNESS = n_out19p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 807.833, 72.8333 )
modes/diffuse = 1
modes/specular = 1
nodes/fragment/0/position = Vector2( 3160, -120 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( 1720, -220 )
nodes/fragment/4/node = SubResource( 5 )
nodes/fragment/4/position = Vector2( 1180, 60 )
nodes/fragment/5/node = SubResource( 7 )
nodes/fragment/5/position = Vector2( 1600, 180 )
nodes/fragment/7/node = SubResource( 9 )
nodes/fragment/7/position = Vector2( 720, 200 )
nodes/fragment/9/node = SubResource( 10 )
nodes/fragment/9/position = Vector2( 1160, 220 )
nodes/fragment/10/node = SubResource( 6 )
nodes/fragment/10/position = Vector2( 1120, 400 )
nodes/fragment/11/node = SubResource( 11 )
nodes/fragment/11/position = Vector2( 1960, 340 )
nodes/fragment/13/node = SubResource( 12 )
nodes/fragment/13/position = Vector2( 1640, 580 )
nodes/fragment/14/node = SubResource( 13 )
nodes/fragment/14/position = Vector2( 1733.49, 1020.26 )
nodes/fragment/15/node = SubResource( 14 )
nodes/fragment/15/position = Vector2( 2280, 0 )
nodes/fragment/16/node = SubResource( 15 )
nodes/fragment/16/position = Vector2( 2260, 520 )
nodes/fragment/17/node = SubResource( 16 )
nodes/fragment/17/position = Vector2( 2300, 220 )
nodes/fragment/19/node = SubResource( 18 )
nodes/fragment/19/position = Vector2( 2760, 20 )
nodes/fragment/20/node = SubResource( 19 )
nodes/fragment/20/position = Vector2( 2760, 440 )
nodes/fragment/connections = PoolIntArray( 10, 0, 9, 1, 7, 0, 9, 0, 13, 0, 15, 0, 2, 0, 15, 1, 15, 0, 0, 0, 11, 0, 15, 2, 11, 0, 16, 2, 14, 0, 16, 0, 5, 0, 16, 1, 9, 0, 17, 1, 11, 0, 17, 2, 19, 0, 0, 3 )

[resource]
shader = SubResource( 3 )
